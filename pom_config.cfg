# POM templates and configurations

# Root POM template
read -r -d '' POM_TEMPLATE_ROOT <<'EOF'
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- Parent -->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>${spring-boot.version}</version>
        <relativePath /> <!-- lookup parent from repository -->
    </parent>

    <artifactId>${artifactId}</artifactId>
    <version>${version}</version>
    <packaging>${packaging}</packaging>

    <!-- Properties -->
    <properties>
        <java.version>21</java.version>
        <spring-boot.version>${spring-boot.version}</spring-boot.version>
        <spring-cloud.version>${spring-cloud.version}</spring-cloud.version>
        <!-- Additional properties -->
        <sonar.projectKey>${groupId}:${artifactId}</sonar.projectKey>
        <sonar.projectName>${project_name}</sonar.projectName>
        <sonar.projectVersion>${version}</sonar.projectVersion>
        <sonar.sourceEncoding>UTF-8</sonar.sourceEncoding>
    </properties>

    <!-- Dependency Management -->
    <dependencyManagement>
        <dependencies>
            <!-- Spring Boot dependencies -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- Spring Cloud dependencies -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!-- Build -->
    <build>
        <plugins>
            <!-- Plugin configurations -->
        </plugins>
    </build>

    ${modules_section}
</project>
EOF

# Module POM template (for modules that contain sub-modules)
read -r -d '' POM_TEMPLATE_MODULE <<'EOF'
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- Parent -->
    <parent>
        <artifactId>${parentArtifactId}</artifactId>
        <version>${parentVersion}</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>${artifactId}</artifactId>
    <version>${version}</version>
    <packaging>${packaging}</packaging>

    <!-- Modules -->
    ${modules_section}
</project>
EOF

# Leaf POM template (for modules without sub-modules)
read -r -d '' POM_TEMPLATE_LEAF <<'EOF'
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- Parent -->
    <parent>
        <artifactId>${parentArtifactId}</artifactId>
        <version>${parentVersion}</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>${artifactId}</artifactId>
    <version>${version}</version>
    <packaging>${packaging}</packaging>

    <!-- Dependencies -->
    <!-- Add module-specific dependencies here -->

    <!-- Build -->
    <build>
        <plugins>
            <!-- Plugin configurations -->
        </plugins>
    </build>
</project>
EOF

# Default directory structure for leaf modules
read -r -d '' DIRECTORY_STRUCTURE_DEFAULT <<'EOF'
EOF

# Directory structures for specific modules
# For example, for the 'domain' module:
read -r -d '' DIRECTORY_STRUCTURE_DOMAIN <<'EOF'
entity
event
valueobject
EOF

# For the 'service' module:
read -r -d '' DIRECTORY_STRUCTURE_SERVICE <<'EOF'
handler
mapper
EOF

# Modules configuration
# Format: module_path:module_type:module_parent:module_pom_template:module_submodules
# module_type: "module" (contains sub-modules) or "leaf" (no sub-modules)
# module_pom_template: POM_TEMPLATE_MODULE or POM_TEMPLATE_LEAF
# module_submodules: space-separated list of sub-modules

read -r -d '' MODULES_CONFIG <<'EOF'
core:module:${artifactId}:POM_TEMPLATE_MODULE:"domain application sharedkernel"
core/domain:leaf:core:POM_TEMPLATE_LEAF:""
core/application:module:core:POM_TEMPLATE_MODULE:"ports service"
core/application/ports:leaf:application:POM_TEMPLATE_LEAF:""
core/application/service:leaf:application:POM_TEMPLATE_LEAF:""
core/sharedkernel:leaf:core:POM_TEMPLATE_LEAF:""
adapters:module:${artifactId}:POM_TEMPLATE_MODULE:"web messaging persistence client"
adapters/web:leaf:adapters:POM_TEMPLATE_LEAF:""
adapters/messaging:leaf:adapters:POM_TEMPLATE_LEAF:""
adapters/persistence:leaf:adapters:POM_TEMPLATE_LEAF:""
adapters/client:leaf:adapters:POM_TEMPLATE_LEAF:""
container:leaf:${artifactId}:POM_TEMPLATE_LEAF:""
EOF

# Parent modules for the root POM
PARENT_MODULES="core adapters container"

# SonarQube modules
SONAR_MODULES="core adapters container"
